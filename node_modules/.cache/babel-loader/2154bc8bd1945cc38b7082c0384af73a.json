{"ast":null,"code":"var _jsxFileName = \"/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\"; //import \"./CSS/register.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  var _errors$fullName, _errors$firstName, _errors$fullName2, _errors$email;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(\"welcome succuefully register !!\"); //alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"fulltName\", {\n        required: true,\n        minLength: 3,\n        maxLength: 100,\n        pattern: /^[A-Za-z]+$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), (errors === null || errors === void 0 ? void 0 : (_errors$fullName = errors.fullName) === null || _errors$fullName === void 0 ? void 0 : _errors$fullName.type) === \"required\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 49\n    }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === \"maxLength\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Full name cannot exceed 100 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), (errors === null || errors === void 0 ? void 0 : (_errors$fullName2 = errors.fullName) === null || _errors$fullName2 === void 0 ? void 0 : _errors$fullName2.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Alphabetical characters only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enetr Valid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n        required: \"You must specify a password\",\n        minLength: {\n          value: 8,\n          message: \"Password must have at least 8 characters\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"aPVRnX/SFHQ7otpNTrGjfU3Hah4=\", false, function () {\n  return [useForm];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx"],"names":["useForm","Registration","register","handleSubmit","watch","formState","errors","onSubmit","data","alert","console","log","required","minLength","maxLength","pattern","fullName","type","firstName","email","value","message","password"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB,C,CACA;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFN,OAAO,EALX;;AAOA,QAAMO,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CADyB,CAEzB;AACD,GAHD,CARyB,CAWtB;;;AAEHC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAAC,SAAD,CAAjB,EAbyB,CAaM;;AAE/B,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,sBACML,QAAQ,CAAC,WAAD,EAAc;AACxBU,QAAAA,QAAQ,EAAE,IADc;AAExBC,QAAAA,SAAS,EAAC,CAFc;AAGxBC,QAAAA,SAAS,EAAE,GAHa;AAIxBC,QAAAA,OAAO,EAAE;AAJe,OAAd;AADd;AAAA;AAAA;AAAA;AAAA,YAFF,EAUG,CAAAT,MAAM,SAAN,IAAAA,MAAM,WAAN,gCAAAA,MAAM,CAAEU,QAAR,sEAAkBC,IAAlB,MAA2B,UAA3B,iBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAV5C,EAWG,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAEY,SAAR,wEAAmBD,IAAnB,MAA4B,WAA5B,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,EAcG,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,iCAAAA,MAAM,CAAEU,QAAR,wEAAkBC,IAAlB,MAA2B,SAA3B,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE,sBAAWf,QAAQ,CAAC,OAAD,EAAU;AAAEa,QAAAA,OAAO,EAAG;AAAZ,OAAV;AAAnB;AAAA;AAAA;AAAA;AAAA,YAlBF,EAmBG,CAAAT,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEa,KAAR,gEAAeF,IAAf,MAAwB,SAAxB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE,sBAEMf,QAAQ,CAAC,UAAD,EAAY;AACtBU,QAAAA,QAAQ,EAAE,6BADY;AAEtBC,QAAAA,SAAS,EAAE;AACTO,UAAAA,KAAK,EAAE,CADE;AAETC,UAAAA,OAAO,EAAE;AAFA;AAFW,OAAZ;AAFd;AAAA;AAAA;AAAA;AAAA,YAvBF,EAiCGf,MAAM,CAACgB,QAAP,iBAAmB;AAAA,gBAAIhB,MAAM,CAACgB,QAAP,CAAgBD;AAApB;AAAA;AAAA;AAAA;AAAA,YAjCtB,eAmCE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAtDD;;GAAMpB,Y;UAMAD,O;;;KANAC,Y;AAwDN,eAAeA,YAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\n//import \"./CSS/register.css\";\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm();\n\n  const onSubmit = (data) => {\n    alert(\"welcome succuefully register !!\");\n    //alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <label>Full Name</label>\n      <input\n        {...register(\"fulltName\", {\n          required: true,\n          minLength:3,\n          maxLength: 100,\n          pattern: /^[A-Za-z]+$/i\n        })}\n      />\n      {errors?.fullName?.type === \"required\" && <p>This field is required</p>}\n      {errors?.firstName?.type === \"maxLength\" && (\n        <p>Full name cannot exceed 100 characters</p>\n      )}\n      {errors?.fullName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )}\n      <label>Email id</label>\n      <input {...register(\"email\", { pattern:  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i })} />\n      {errors?.email?.type === \"pattern\" && (\n        <p>Enetr Valid Email</p>\n      )}\n      <label>Password</label>\n      <input\n       \n        {...register(\"password\",{\n          required: \"You must specify a password\",\n          minLength: {\n            value: 8,\n            message: \"Password must have at least 8 characters\"\n          }\n        })}\n      />\n      {errors.password && <p>{errors.password.message}</p>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n \nexport default Registration;"]},"metadata":{},"sourceType":"module"}