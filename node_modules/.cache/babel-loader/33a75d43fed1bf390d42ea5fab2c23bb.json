{"ast":null,"code":"var _jsxFileName = \"/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport validator from 'validator';\nimport { useHistory } from \"react-router-dom\";\nimport \"./CSS/Login.css\";\nimport log from \"./assets/Images/log.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setLoginUser\n}) => {\n  _s();\n\n  const history = useHistory(); // const [emailError, setEmailError] = useState('')\n  // const [errorMessage, setErrorMessage] = useState('')\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmitbtn = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = user;\n    const res = await fetch('/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = res.json();\n\n    if (res.status === 400) {\n      alert(\"Invalid Credential\");\n    } else {\n      alert(\"Successfull Login\");\n      history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          value: user.email,\n          placeholder: \"Your Email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: user.password,\n          placeholder: \"Your Password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleSubmitbtn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"2Qg9sn5TgN2IdujEQGbCBVSx3U8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Login.jsx"],"names":["useState","axios","validator","useHistory","log","Login","setLoginUser","history","user","setUser","email","password","handleChange","e","name","value","target","handleSubmitbtn","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","alert","push"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AAChC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B,CADgC,CAEhC;AACA;;AACA,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAmBT,QAAQ,CAAC;AAChCU,IAAAA,KAAK,EAAC,EAD0B;AAEhCC,IAAAA,QAAQ,EAAC;AAFuB,GAAD,CAAjC;;AAQF,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACM,IAAD,GAAQC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAQA,QAAME,eAAe,GAAG,MAAOJ,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACK,cAAF;AACE,UAAM;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,IAA5B;AAEA,UAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAU;AAC/BC,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AAAC,wBAAiB;AAAlB,OAFsB;AAG/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACf,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf;AAHyB,KAAV,CAAvB;AAMA,UAAMe,IAAI,GAAGP,GAAG,CAACQ,IAAJ,EAAb;;AAEA,QAAGR,GAAG,CAACS,MAAJ,KAAe,GAAlB,EAAuB;AACrBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAFD,MAGK;AACHA,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,GAAb;AACD;AAEE,GApBP;;AAqBE,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BAEG;AAAO,QAAA,MAAM,EAAC,MAAd;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAEtB,IAAI,CAACE,KAA5C;AACA,UAAA,WAAW,EAAC,YADZ;AACyB,UAAA,QAAQ,EAAGE;AADpC;AAAA;AAAA;AAAA;AAAA,gBAFH,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQK;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAuC,UAAA,KAAK,EAAEJ,IAAI,CAACG,QAAnD;AACA,UAAA,WAAW,EAAC,eADZ;AAC4B,UAAA,QAAQ,EAAGC;AADvC;AAAA;AAAA;AAAA;AAAA,gBARL,eAYK;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEK,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAsBC,CA/DH;;GAAMZ,K;UACYF,U;;;KADZE,K;AAiEN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport validator from 'validator';\nimport { useHistory } from \"react-router-dom\";\nimport \"./CSS/Login.css\";\nimport log from \"./assets/Images/log.jpg\";\n\nconst Login = ({setLoginUser}) => {\n  const history = useHistory();\n  // const [emailError, setEmailError] = useState('')\n  // const [errorMessage, setErrorMessage] = useState('')\n  const [ user, setUser] = useState({\n    email:\"\",\n    password:\"\"\n   \n});\n\n\n\nconst handleChange = e => {\n    const { name, value } = e.target\n    setUser({\n        ...user,\n        [name]: value\n    })\n}\n\nconst handleSubmitbtn = async (e) => {\n  e.preventDefault();\n    const { email, password } = user;\n\n    const res = await fetch('/login',{\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body: JSON.stringify({email, password})\n    });\n\n    const data = res.json();\n\n    if(res.status === 400) {\n      alert(\"Invalid Credential\");\n    } \n    else {\n      alert(\"Successfull Login\");\n      history.push(\"/\")\n    }\n\n      }\n  return ( \n    <>\n    <div className=\"Login\">\n       \n       <form  method=\"POST\">\n        <label>Email id</label>\n          <input type=\"text\" name=\"email\" value={user.email} \n          placeholder=\"Your Email\" onChange={ handleChange } \n         \n          />\n           {/* <p>{emailError}</p> */}\n           <label>Password</label>\n            <input type=\"password\" name=\"password\" value={user.password} \n            placeholder=\"Your Password\" onChange={ handleChange } \n           />\n            {/* <p>{errorMessage}</p> */}\n            <button className=\"button\" onClick={handleSubmitbtn} >Login</button>\n          </form>\n         \n    </div>\n    </>\n   );\n  }\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}