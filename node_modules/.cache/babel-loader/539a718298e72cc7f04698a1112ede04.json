{"ast":null,"code":"var _jsxFileName = \"/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  setLoginUser\n}) => {\n  _s();\n\n  const [emailError, setEmailError] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmitbtn = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = user;\n    const res = await fetch('/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = res.json();\n\n    if (res.status === 400 && !data) {\n      alert(\"Invalid C\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: user.email,\n        placeholder: \"Your Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: user.password,\n        placeholder: \"Your Password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSubmitbtn,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"0CCStEyhXE6dSzvUcChOnLmDEw4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Login.jsx"],"names":["useState","axios","validator","Login","setLoginUser","emailError","setEmailError","errorMessage","setErrorMessage","user","setUser","email","password","handleChange","e","name","value","target","handleSubmitbtn","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","alert"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAAA;;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAmBV,QAAQ,CAAC;AAChCW,IAAAA,KAAK,EAAC,EAD0B;AAEhCC,IAAAA,QAAQ,EAAC;AAFuB,GAAD,CAAjC;;AAQF,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACM,IAAD,GAAQC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAQA,QAAME,eAAe,GAAG,MAAOJ,CAAP,IAAa;AACnCA,IAAAA,CAAC,CAACK,cAAF;AACE,UAAM;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,IAA5B;AAEA,UAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAU;AAC/BC,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AAAC,wBAAiB;AAAlB,OAFsB;AAG/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACf,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAf;AAHyB,KAAV,CAAvB;AAMA,UAAMe,IAAI,GAAGP,GAAG,CAACQ,IAAJ,EAAb;;AAEA,QAAGR,GAAG,CAACS,MAAJ,KAAe,GAAf,IAAsB,CAACF,IAA1B,EAAgC;AAC9BG,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD;AAEE,GAhBP;;AAiBE,sBACE;AAAA,2BAEG;AAAO,MAAA,MAAM,EAAC,MAAd;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,KAAK,EAAErB,IAAI,CAACE,KAA5C;AACA,QAAA,WAAW,EAAC,YADZ;AACyB,QAAA,QAAQ,EAAGE;AADpC;AAAA;AAAA;AAAA;AAAA,cAFH,eAMI;AAAA,kBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQK;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,KAAK,EAAEI,IAAI,CAACG,QAAnD;AACA,QAAA,WAAW,EAAC,eADZ;AAC4B,QAAA,QAAQ,EAAGC;AADvC;AAAA;AAAA;AAAA;AAAA,cARL,eAWK;AAAA,kBAAIN;AAAJ;AAAA;AAAA;AAAA;AAAA,cAXL,eAYK;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEW,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBC,CAzDH;;GAAMf,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport validator from 'validator';\n\nconst Login = ({setLoginUser}) => {\n\n  const [emailError, setEmailError] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [ user, setUser] = useState({\n    email:\"\",\n    password:\"\"\n   \n});\n\n\n\nconst handleChange = e => {\n    const { name, value } = e.target\n    setUser({\n        ...user,\n        [name]: value\n    })\n}\n\nconst handleSubmitbtn = async (e) => {\n  e.preventDefault();\n    const { email, password } = user;\n\n    const res = await fetch('/login',{\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body: JSON.stringify({email, password})\n    });\n\n    const data = res.json();\n\n    if(res.status === 400 && !data) {\n      alert(\"Invalid C\")\n    }\n\n      }\n  return ( \n    <div>\n       \n       <form  method=\"POST\">\n        <label>Email id</label>\n          <input type=\"text\" name=\"email\" value={user.email} \n          placeholder=\"Your Email\" onChange={ handleChange } \n         \n          />\n           <p>{emailError}</p>\n           <label>Password</label>\n            <input type=\"password\" name=\"password\" value={user.password} \n            placeholder=\"Your Password\" onChange={ handleChange } \n           />\n            <p>{errorMessage}</p>\n            <button className=\"button\" onClick={handleSubmitbtn} >Login</button>\n          </form>\n         \n    </div>\n   );\n  }\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}