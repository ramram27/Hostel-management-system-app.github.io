{"ast":null,"code":"var _jsxFileName = \"/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport \"./CSS/register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  var _errors$email;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    axios.post(\"http://localhost:8000/signup\", data).then(res => {\n      alert(res.data.message); //history.push(\"/login\")\n    }); //alert(\"welcome succuefully register !!\");\n\n    alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\", {\n        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"pattern\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enetr Valid Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n        required: \"You must specify a password\",\n        minLength: {\n          value: 8,\n          message: \"Password must have at least 8 characters\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"aPVRnX/SFHQ7otpNTrGjfU3Hah4=\", false, function () {\n  return [useForm];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx"],"names":["useForm","axios","Registration","register","handleSubmit","watch","formState","errors","onSubmit","data","post","then","res","alert","message","JSON","stringify","console","log","pattern","email","type","required","minLength","value","password"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAJP,MAKFP,OAAO,EALX;;AAOA,QAAMQ,QAAQ,GAAIC,IAAD,IAAU;AACzBR,IAAAA,KAAK,CAACS,IAAN,CAAW,8BAAX,EAA2CD,IAA3C,EACCE,IADD,CACOC,GAAG,IAAI;AACVC,MAAAA,KAAK,CAACD,GAAG,CAACH,IAAJ,CAASK,OAAV,CAAL,CADU,CAEV;AACH,KAJD,EADyB,CAMzB;;AACAD,IAAAA,KAAK,CAACE,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAD,CAAL;AACD,GARD,CARyB,CAgBtB;;;AAEHQ,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAAC,SAAD,CAAjB,EAlByB,CAkBM;;AAE/B,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,4BAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE,sBAAWL,QAAQ,CAAC,OAAD,EAAU;AAAEgB,QAAAA,OAAO,EAAG;AAAZ,OAAV;AAAnB;AAAA;AAAA;AAAA;AAAA,YAlBF,EAmBG,CAAAZ,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEa,KAAR,gEAAeC,IAAf,MAAwB,SAAxB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuBE,sBAEMlB,QAAQ,CAAC,UAAD,EAAY;AACtBmB,QAAAA,QAAQ,EAAE,6BADY;AAEtBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE,CADE;AAETV,UAAAA,OAAO,EAAE;AAFA;AAFW,OAAZ;AAFd;AAAA;AAAA;AAAA;AAAA,YAvBF,EAiCGP,MAAM,CAACkB,QAAP,iBAAmB;AAAA,gBAAIlB,MAAM,CAACkB,QAAP,CAAgBX;AAApB;AAAA;AAAA;AAAA;AAAA,YAjCtB,eAmCE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA3DD;;GAAMZ,Y;UAMAF,O;;;KANAE,Y;AA6DN,eAAeA,YAAf","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport axios from \"axios\"\nimport \"./CSS/register.css\";\n\n\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm();\n\n  const onSubmit = (data) => {\n    axios.post(\"http://localhost:8000/signup\", data)\n    .then( res => {\n        alert(res.data.message)\n        //history.push(\"/login\")\n    })\n    //alert(\"welcome succuefully register !!\");\n    alert(JSON.stringify(data));\n  }; // your form submit function which will invoke after successful validation\n\n  console.log(watch(\"example\")); // you can watch individual input by pass the name of the input\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* <label>Full Name</label>\n      <input\n        {...register(\"fulltName\", {\n          required: true,\n          minLength:3,\n          maxLength: 100,\n          pattern: /^[A-Za-z]+$/i\n        })}\n      />\n      {errors?.fullName?.type === \"required\" && <p>This field is required</p>}\n      {errors?.firstName?.type === \"maxLength\" && (\n        <p>Full name cannot exceed 100 characters</p>\n      )}\n      {errors?.fullName?.type === \"pattern\" && (\n        <p>Alphabetical characters only</p>\n      )} */}\n      <label>Email id</label>\n      <input {...register(\"email\", { pattern:  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i })} />\n      {errors?.email?.type === \"pattern\" && (\n        <p>Enetr Valid Email</p>\n      )}\n      <label>Password</label>\n      <input\n       \n        {...register(\"password\",{\n          required: \"You must specify a password\",\n          minLength: {\n            value: 8,\n            message: \"Password must have at least 8 characters\"\n          }\n        })}\n      />\n      {errors.password && <p>{errors.password.message}</p>}\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n \nexport default Registration;"]},"metadata":{},"sourceType":"module"}