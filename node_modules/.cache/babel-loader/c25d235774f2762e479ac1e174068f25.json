{"ast":null,"code":"var _jsxFileName = \"/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx\",\n    _s = $RefreshSig$();\n\n//import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport validator from 'validator'; //import axios from \"axios\";\n\nimport \"./CSS/register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = () => {\n  _s();\n\n  const history = useHistory();\n  const [emailError, setEmailError] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmitbtn = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = user;\n\n    if (!email && !password) {\n      alert(\"Enter the email and password\");\n    } else if (!validator.isEmail(email)) {\n      setEmailError('Enter valid Email!'); // setEmailError('Valid Email :');\n      // alert(\"succesfull registr\");\n      // history.push(\"/login\");\n    } else if (!validator.isStrongPassword(value, {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n      setErrorMessage('Is Not Strong Password');\n    }\n\n    const res = await fetch('/signup', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: user.email,\n        placeholder: \"Your Email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: user.password,\n        placeholder: \"Your Password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleSubmitbtn,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registration, \"2XZh+5+uIQIYTkrS/+LKbtHrArI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/raiadi2008/Desktop/MERN_project/Hostel_BookingApp/hostel-book-app/src/Registration.jsx"],"names":["useState","useHistory","validator","Registration","history","emailError","setEmailError","errorMessage","setErrorMessage","user","setUser","email","password","handleChange","e","name","value","target","handleSubmitbtn","preventDefault","alert","isEmail","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","res","fetch","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["//import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport validator from 'validator';\n//import axios from \"axios\";\nimport \"./CSS/register.css\";\n\n\nconst Registration = () => {\n  const history = useHistory();\n  const [emailError, setEmailError] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [ user, setUser] = useState({\n    email:\"\",\n    password:\"\"\n   \n});\n\n\n\nconst handleChange = e => {\n    const { name, value } = e.target\n    setUser({\n        ...user,\n        [name]: value\n    })\n}\n\nconst handleSubmitbtn = async (e) => {\n  e.preventDefault();\n    const { email, password } = user;\n    \n    if(!email && !password) {\n     alert(\"Enter the email and password\");\n    }  \n    else if (!validator.isEmail(email)) {\n      setEmailError('Enter valid Email!')\n      // setEmailError('Valid Email :');\n      // alert(\"succesfull registr\");\n      // history.push(\"/login\");\n    }\n   else if (!validator.isStrongPassword(value, {\n      minLength: 8, minLowercase: 1,\n      minUppercase: 1, minNumbers: 1, minSymbols: 1\n    })) {\n      setErrorMessage('Is Not Strong Password')\n    }\n    const res = await fetch('/signup',{\n      method: \"POST\",\n      headers: {\"Content-Type\" : \"application/json\"},\n      body: JSON.stringify({email, password})\n    });\n    \n}\n\n  return (\n    <div className=\"signup\">\n        \n        <form  method=\"POST\">\n        <label>Email id</label>\n          <input type=\"text\" name=\"email\" value={user.email} \n          placeholder=\"Your Email\" onChange={ handleChange } \n         \n          />\n           <p>{emailError}</p>\n           <label>Password</label>\n            <input type=\"password\" name=\"password\" value={user.password} \n            placeholder=\"Your Password\" onChange={ handleChange } \n           />\n            <p>{errorMessage}</p>\n            <button className=\"button\" onClick={handleSubmitbtn} >Register</button>\n          </form>\n         \n    </div>\n  );\n}\n \nexport default Registration;"]},"metadata":{},"sourceType":"module"}